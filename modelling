{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNMquFtacM2B38W3x/+EYRa",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Tewaa/my-boots/blob/master/modelling\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "syioMcHCV2zf"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "from sklearn.datasets import load_breast_cancer\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "cancer1 = load_breast_cancer()"
      ],
      "metadata": {
        "id": "wGbuCI1RWDCO"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cancer1.feature_names"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n1pwdZ4wWnCD",
        "outputId": "cd5fadb4-f279-45d1-e051-aab5f2c381b7"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n",
              "       'mean smoothness', 'mean compactness', 'mean concavity',\n",
              "       'mean concave points', 'mean symmetry', 'mean fractal dimension',\n",
              "       'radius error', 'texture error', 'perimeter error', 'area error',\n",
              "       'smoothness error', 'compactness error', 'concavity error',\n",
              "       'concave points error', 'symmetry error',\n",
              "       'fractal dimension error', 'worst radius', 'worst texture',\n",
              "       'worst perimeter', 'worst area', 'worst smoothness',\n",
              "       'worst compactness', 'worst concavity', 'worst concave points',\n",
              "       'worst symmetry', 'worst fractal dimension'], dtype='<U23')"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer1.target_names"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iEcvQgwCXU27",
        "outputId": "a50db37f-fca5-4859-8d30-fd774391e838"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['malignant', 'benign'], dtype='<U9')"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 433
        },
        "id": "RukYVixPXwnb",
        "outputId": "dc9dce53-f4a1-45fd-d778-47e5ab3030b0"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_bunch.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m     34\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 35\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     36\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'head'",
            "\nDuring handling of the above exception, another exception occurred:\n",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-5-ac6af69da079>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcancer1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.9/dist-packages/sklearn/utils/_bunch.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m     35\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 37\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     38\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setstate__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: head"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer = pd.DataFrame(cancer1.data, columns = cancer1.feature_names)\n",
        "cancer.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "id": "lk05rMGvYjdW",
        "outputId": "cb838277-7d9c-44b6-a1b9-bc14278d6a36"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n",
              "0        17.99         10.38          122.80     1001.0          0.11840   \n",
              "1        20.57         17.77          132.90     1326.0          0.08474   \n",
              "2        19.69         21.25          130.00     1203.0          0.10960   \n",
              "3        11.42         20.38           77.58      386.1          0.14250   \n",
              "4        20.29         14.34          135.10     1297.0          0.10030   \n",
              "\n",
              "   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n",
              "0           0.27760          0.3001              0.14710         0.2419   \n",
              "1           0.07864          0.0869              0.07017         0.1812   \n",
              "2           0.15990          0.1974              0.12790         0.2069   \n",
              "3           0.28390          0.2414              0.10520         0.2597   \n",
              "4           0.13280          0.1980              0.10430         0.1809   \n",
              "\n",
              "   mean fractal dimension  ...  worst radius  worst texture  worst perimeter  \\\n",
              "0                 0.07871  ...         25.38          17.33           184.60   \n",
              "1                 0.05667  ...         24.99          23.41           158.80   \n",
              "2                 0.05999  ...         23.57          25.53           152.50   \n",
              "3                 0.09744  ...         14.91          26.50            98.87   \n",
              "4                 0.05883  ...         22.54          16.67           152.20   \n",
              "\n",
              "   worst area  worst smoothness  worst compactness  worst concavity  \\\n",
              "0      2019.0            0.1622             0.6656           0.7119   \n",
              "1      1956.0            0.1238             0.1866           0.2416   \n",
              "2      1709.0            0.1444             0.4245           0.4504   \n",
              "3       567.7            0.2098             0.8663           0.6869   \n",
              "4      1575.0            0.1374             0.2050           0.4000   \n",
              "\n",
              "   worst concave points  worst symmetry  worst fractal dimension  \n",
              "0                0.2654          0.4601                  0.11890  \n",
              "1                0.1860          0.2750                  0.08902  \n",
              "2                0.2430          0.3613                  0.08758  \n",
              "3                0.2575          0.6638                  0.17300  \n",
              "4                0.1625          0.2364                  0.07678  \n",
              "\n",
              "[5 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c719e938-755b-475b-81f8-1d93cef612e7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mean radius</th>\n",
              "      <th>mean texture</th>\n",
              "      <th>mean perimeter</th>\n",
              "      <th>mean area</th>\n",
              "      <th>mean smoothness</th>\n",
              "      <th>mean compactness</th>\n",
              "      <th>mean concavity</th>\n",
              "      <th>mean concave points</th>\n",
              "      <th>mean symmetry</th>\n",
              "      <th>mean fractal dimension</th>\n",
              "      <th>...</th>\n",
              "      <th>worst radius</th>\n",
              "      <th>worst texture</th>\n",
              "      <th>worst perimeter</th>\n",
              "      <th>worst area</th>\n",
              "      <th>worst smoothness</th>\n",
              "      <th>worst compactness</th>\n",
              "      <th>worst concavity</th>\n",
              "      <th>worst concave points</th>\n",
              "      <th>worst symmetry</th>\n",
              "      <th>worst fractal dimension</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.3001</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>0.2419</td>\n",
              "      <td>0.07871</td>\n",
              "      <td>...</td>\n",
              "      <td>25.38</td>\n",
              "      <td>17.33</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.1622</td>\n",
              "      <td>0.6656</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.0869</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>0.1812</td>\n",
              "      <td>0.05667</td>\n",
              "      <td>...</td>\n",
              "      <td>24.99</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.1238</td>\n",
              "      <td>0.1866</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.1974</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>0.2069</td>\n",
              "      <td>0.05999</td>\n",
              "      <td>...</td>\n",
              "      <td>23.57</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.1444</td>\n",
              "      <td>0.4245</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.2414</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>0.2597</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>...</td>\n",
              "      <td>14.91</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.2098</td>\n",
              "      <td>0.8663</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.1980</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>0.1809</td>\n",
              "      <td>0.05883</td>\n",
              "      <td>...</td>\n",
              "      <td>22.54</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.1374</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 30 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c719e938-755b-475b-81f8-1d93cef612e7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c719e938-755b-475b-81f8-1d93cef612e7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c719e938-755b-475b-81f8-1d93cef612e7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RvWa4aK3ZCHz",
        "outputId": "2e963c4c-ef9c-43bd-aa05-18d144bd34cb"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(569, 30)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer.columns=cancer.columns.str.replace(' ','_')"
      ],
      "metadata": {
        "id": "pbqEObV7ZdXY"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cancer['Target'] = cancer1.target\n",
        "cancer.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YEQvkQVaaM2i",
        "outputId": "4deb602f-1bae-41a7-e1f2-582d9607bc64"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(569, 32)"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "a8I2BGbTac2G",
        "outputId": "2603cb99-76fd-40f8-fb07-e2406627ca19"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   _m_e_a_n___r_a_d_i_u_s_  _m_e_a_n___t_e_x_t_u_r_e_  \\\n",
              "0                    17.99                      10.38   \n",
              "1                    20.57                      17.77   \n",
              "2                    19.69                      21.25   \n",
              "3                    11.42                      20.38   \n",
              "4                    20.29                      14.34   \n",
              "\n",
              "   _m_e_a_n___p_e_r_i_m_e_t_e_r_  _m_e_a_n___a_r_e_a_  \\\n",
              "0                         122.80               1001.0   \n",
              "1                         132.90               1326.0   \n",
              "2                         130.00               1203.0   \n",
              "3                          77.58                386.1   \n",
              "4                         135.10               1297.0   \n",
              "\n",
              "   _m_e_a_n___s_m_o_o_t_h_n_e_s_s_  _m_e_a_n___c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "0                          0.11840                            0.27760   \n",
              "1                          0.08474                            0.07864   \n",
              "2                          0.10960                            0.15990   \n",
              "3                          0.14250                            0.28390   \n",
              "4                          0.10030                            0.13280   \n",
              "\n",
              "   _m_e_a_n___c_o_n_c_a_v_i_t_y_  _m_e_a_n___c_o_n_c_a_v_e___p_o_i_n_t_s_  \\\n",
              "0                         0.3001                                  0.14710   \n",
              "1                         0.0869                                  0.07017   \n",
              "2                         0.1974                                  0.12790   \n",
              "3                         0.2414                                  0.10520   \n",
              "4                         0.1980                                  0.10430   \n",
              "\n",
              "   _m_e_a_n___s_y_m_m_e_t_r_y_  _m_e_a_n___f_r_a_c_t_a_l___d_i_m_e_n_s_i_o_n_  \\\n",
              "0                       0.2419                                        0.07871   \n",
              "1                       0.1812                                        0.05667   \n",
              "2                       0.2069                                        0.05999   \n",
              "3                       0.2597                                        0.09744   \n",
              "4                       0.1809                                        0.05883   \n",
              "\n",
              "   ...  _w_o_r_s_t___p_e_r_i_m_e_t_e_r_  _w_o_r_s_t___a_r_e_a_  \\\n",
              "0  ...                           184.60                 2019.0   \n",
              "1  ...                           158.80                 1956.0   \n",
              "2  ...                           152.50                 1709.0   \n",
              "3  ...                            98.87                  567.7   \n",
              "4  ...                           152.20                 1575.0   \n",
              "\n",
              "   _w_o_r_s_t___s_m_o_o_t_h_n_e_s_s_  _w_o_r_s_t___c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "0                             0.1622                               0.6656   \n",
              "1                             0.1238                               0.1866   \n",
              "2                             0.1444                               0.4245   \n",
              "3                             0.2098                               0.8663   \n",
              "4                             0.1374                               0.2050   \n",
              "\n",
              "   _w_o_r_s_t___c_o_n_c_a_v_i_t_y_  _w_o_r_s_t___c_o_n_c_a_v_e___p_o_i_n_t_s_  \\\n",
              "0                           0.7119                                     0.2654   \n",
              "1                           0.2416                                     0.1860   \n",
              "2                           0.4504                                     0.2430   \n",
              "3                           0.6869                                     0.2575   \n",
              "4                           0.4000                                     0.1625   \n",
              "\n",
              "   _w_o_r_s_t___s_y_m_m_e_t_r_y_  \\\n",
              "0                         0.4601   \n",
              "1                         0.2750   \n",
              "2                         0.3613   \n",
              "3                         0.6638   \n",
              "4                         0.2364   \n",
              "\n",
              "   _w_o_r_s_t___f_r_a_c_t_a_l___d_i_m_e_n_s_i_o_n_  _T_a_r_g_e_t_  Target  \n",
              "0                                          0.11890              0       0  \n",
              "1                                          0.08902              0       0  \n",
              "2                                          0.08758              0       0  \n",
              "3                                          0.17300              0       0  \n",
              "4                                          0.07678              0       0  \n",
              "\n",
              "[5 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-41f03afc-bd52-41cd-b57b-8337a5f236ed\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>_m_e_a_n___r_a_d_i_u_s_</th>\n",
              "      <th>_m_e_a_n___t_e_x_t_u_r_e_</th>\n",
              "      <th>_m_e_a_n___p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_m_e_a_n___a_r_e_a_</th>\n",
              "      <th>_m_e_a_n___s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n___c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n___c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_m_e_a_n___c_o_n_c_a_v_e___p_o_i_n_t_s_</th>\n",
              "      <th>_m_e_a_n___s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_m_e_a_n___f_r_a_c_t_a_l___d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>...</th>\n",
              "      <th>_w_o_r_s_t___p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_w_o_r_s_t___a_r_e_a_</th>\n",
              "      <th>_w_o_r_s_t___s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t___c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t___c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_w_o_r_s_t___c_o_n_c_a_v_e___p_o_i_n_t_s_</th>\n",
              "      <th>_w_o_r_s_t___s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_w_o_r_s_t___f_r_a_c_t_a_l___d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>_T_a_r_g_e_t_</th>\n",
              "      <th>Target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.3001</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>0.2419</td>\n",
              "      <td>0.07871</td>\n",
              "      <td>...</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.1622</td>\n",
              "      <td>0.6656</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.0869</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>0.1812</td>\n",
              "      <td>0.05667</td>\n",
              "      <td>...</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.1238</td>\n",
              "      <td>0.1866</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.1974</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>0.2069</td>\n",
              "      <td>0.05999</td>\n",
              "      <td>...</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.1444</td>\n",
              "      <td>0.4245</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.2414</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>0.2597</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>...</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.2098</td>\n",
              "      <td>0.8663</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.1980</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>0.1809</td>\n",
              "      <td>0.05883</td>\n",
              "      <td>...</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.1374</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41f03afc-bd52-41cd-b57b-8337a5f236ed')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-41f03afc-bd52-41cd-b57b-8337a5f236ed button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-41f03afc-bd52-41cd-b57b-8337a5f236ed');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "id": "Jm3r9YLNamJU",
        "outputId": "d81869dd-7705-4adf-c36b-ae76440837f0"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     _m_e_a_n_ _r_a_d_i_u_s_  _m_e_a_n_ _t_e_x_t_u_r_e_  \\\n",
              "564                    21.56                      22.39   \n",
              "565                    20.13                      28.25   \n",
              "566                    16.60                      28.08   \n",
              "567                    20.60                      29.33   \n",
              "568                     7.76                      24.54   \n",
              "\n",
              "     _m_e_a_n_ _p_e_r_i_m_e_t_e_r_  _m_e_a_n_ _a_r_e_a_  \\\n",
              "564                         142.00               1479.0   \n",
              "565                         131.20               1261.0   \n",
              "566                         108.30                858.1   \n",
              "567                         140.10               1265.0   \n",
              "568                          47.92                181.0   \n",
              "\n",
              "     _m_e_a_n_ _s_m_o_o_t_h_n_e_s_s_  _m_e_a_n_ _c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "564                          0.11100                            0.11590   \n",
              "565                          0.09780                            0.10340   \n",
              "566                          0.08455                            0.10230   \n",
              "567                          0.11780                            0.27700   \n",
              "568                          0.05263                            0.04362   \n",
              "\n",
              "     _m_e_a_n_ _c_o_n_c_a_v_i_t_y_  _m_e_a_n_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_  \\\n",
              "564                        0.24390                                  0.13890   \n",
              "565                        0.14400                                  0.09791   \n",
              "566                        0.09251                                  0.05302   \n",
              "567                        0.35140                                  0.15200   \n",
              "568                        0.00000                                  0.00000   \n",
              "\n",
              "     _m_e_a_n_ _s_y_m_m_e_t_r_y_  \\\n",
              "564                       0.1726   \n",
              "565                       0.1752   \n",
              "566                       0.1590   \n",
              "567                       0.2397   \n",
              "568                       0.1587   \n",
              "\n",
              "     _m_e_a_n_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_  ...  \\\n",
              "564                                        0.05623  ...   \n",
              "565                                        0.05533  ...   \n",
              "566                                        0.05648  ...   \n",
              "567                                        0.07016  ...   \n",
              "568                                        0.05884  ...   \n",
              "\n",
              "     _w_o_r_s_t_ _p_e_r_i_m_e_t_e_r_  _w_o_r_s_t_ _a_r_e_a_  \\\n",
              "564                           166.10                 2027.0   \n",
              "565                           155.00                 1731.0   \n",
              "566                           126.70                 1124.0   \n",
              "567                           184.60                 1821.0   \n",
              "568                            59.16                  268.6   \n",
              "\n",
              "     _w_o_r_s_t_ _s_m_o_o_t_h_n_e_s_s_  _w_o_r_s_t_ _c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "564                            0.14100                              0.21130   \n",
              "565                            0.11660                              0.19220   \n",
              "566                            0.11390                              0.30940   \n",
              "567                            0.16500                              0.86810   \n",
              "568                            0.08996                              0.06444   \n",
              "\n",
              "     _w_o_r_s_t_ _c_o_n_c_a_v_i_t_y_  \\\n",
              "564                           0.4107   \n",
              "565                           0.3215   \n",
              "566                           0.3403   \n",
              "567                           0.9387   \n",
              "568                           0.0000   \n",
              "\n",
              "     _w_o_r_s_t_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_  _w_o_r_s_t_ _s_y_m_m_e_t_r_y_  \\\n",
              "564                                     0.2216                         0.2060   \n",
              "565                                     0.1628                         0.2572   \n",
              "566                                     0.1418                         0.2218   \n",
              "567                                     0.2650                         0.4087   \n",
              "568                                     0.0000                         0.2871   \n",
              "\n",
              "     _w_o_r_s_t_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_  _T_a_r_g_e_t_  Target  \n",
              "564                                          0.07115              0       0  \n",
              "565                                          0.06637              0       0  \n",
              "566                                          0.07820              0       0  \n",
              "567                                          0.12400              0       0  \n",
              "568                                          0.07039              1       1  \n",
              "\n",
              "[5 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f8f37e9f-6890-4ccc-a2ca-79cfaa88565f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>_m_e_a_n_ _r_a_d_i_u_s_</th>\n",
              "      <th>_m_e_a_n_ _t_e_x_t_u_r_e_</th>\n",
              "      <th>_m_e_a_n_ _p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_m_e_a_n_ _a_r_e_a_</th>\n",
              "      <th>_m_e_a_n_ _s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n_ _c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n_ _c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_m_e_a_n_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_</th>\n",
              "      <th>_m_e_a_n_ _s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_m_e_a_n_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>...</th>\n",
              "      <th>_w_o_r_s_t_ _p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_w_o_r_s_t_ _a_r_e_a_</th>\n",
              "      <th>_w_o_r_s_t_ _s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_</th>\n",
              "      <th>_w_o_r_s_t_ _s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_w_o_r_s_t_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>_T_a_r_g_e_t_</th>\n",
              "      <th>Target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>21.56</td>\n",
              "      <td>22.39</td>\n",
              "      <td>142.00</td>\n",
              "      <td>1479.0</td>\n",
              "      <td>0.11100</td>\n",
              "      <td>0.11590</td>\n",
              "      <td>0.24390</td>\n",
              "      <td>0.13890</td>\n",
              "      <td>0.1726</td>\n",
              "      <td>0.05623</td>\n",
              "      <td>...</td>\n",
              "      <td>166.10</td>\n",
              "      <td>2027.0</td>\n",
              "      <td>0.14100</td>\n",
              "      <td>0.21130</td>\n",
              "      <td>0.4107</td>\n",
              "      <td>0.2216</td>\n",
              "      <td>0.2060</td>\n",
              "      <td>0.07115</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>20.13</td>\n",
              "      <td>28.25</td>\n",
              "      <td>131.20</td>\n",
              "      <td>1261.0</td>\n",
              "      <td>0.09780</td>\n",
              "      <td>0.10340</td>\n",
              "      <td>0.14400</td>\n",
              "      <td>0.09791</td>\n",
              "      <td>0.1752</td>\n",
              "      <td>0.05533</td>\n",
              "      <td>...</td>\n",
              "      <td>155.00</td>\n",
              "      <td>1731.0</td>\n",
              "      <td>0.11660</td>\n",
              "      <td>0.19220</td>\n",
              "      <td>0.3215</td>\n",
              "      <td>0.1628</td>\n",
              "      <td>0.2572</td>\n",
              "      <td>0.06637</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>566</th>\n",
              "      <td>16.60</td>\n",
              "      <td>28.08</td>\n",
              "      <td>108.30</td>\n",
              "      <td>858.1</td>\n",
              "      <td>0.08455</td>\n",
              "      <td>0.10230</td>\n",
              "      <td>0.09251</td>\n",
              "      <td>0.05302</td>\n",
              "      <td>0.1590</td>\n",
              "      <td>0.05648</td>\n",
              "      <td>...</td>\n",
              "      <td>126.70</td>\n",
              "      <td>1124.0</td>\n",
              "      <td>0.11390</td>\n",
              "      <td>0.30940</td>\n",
              "      <td>0.3403</td>\n",
              "      <td>0.1418</td>\n",
              "      <td>0.2218</td>\n",
              "      <td>0.07820</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>567</th>\n",
              "      <td>20.60</td>\n",
              "      <td>29.33</td>\n",
              "      <td>140.10</td>\n",
              "      <td>1265.0</td>\n",
              "      <td>0.11780</td>\n",
              "      <td>0.27700</td>\n",
              "      <td>0.35140</td>\n",
              "      <td>0.15200</td>\n",
              "      <td>0.2397</td>\n",
              "      <td>0.07016</td>\n",
              "      <td>...</td>\n",
              "      <td>184.60</td>\n",
              "      <td>1821.0</td>\n",
              "      <td>0.16500</td>\n",
              "      <td>0.86810</td>\n",
              "      <td>0.9387</td>\n",
              "      <td>0.2650</td>\n",
              "      <td>0.4087</td>\n",
              "      <td>0.12400</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>7.76</td>\n",
              "      <td>24.54</td>\n",
              "      <td>47.92</td>\n",
              "      <td>181.0</td>\n",
              "      <td>0.05263</td>\n",
              "      <td>0.04362</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.1587</td>\n",
              "      <td>0.05884</td>\n",
              "      <td>...</td>\n",
              "      <td>59.16</td>\n",
              "      <td>268.6</td>\n",
              "      <td>0.08996</td>\n",
              "      <td>0.06444</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.2871</td>\n",
              "      <td>0.07039</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8f37e9f-6890-4ccc-a2ca-79cfaa88565f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f8f37e9f-6890-4ccc-a2ca-79cfaa88565f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f8f37e9f-6890-4ccc-a2ca-79cfaa88565f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer.sample()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 208
        },
        "id": "gZ-_H1lWawI0",
        "outputId": "3c001f4e-bfbb-4ab6-a1cf-c82de7c157e3"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     _m_e_a_n_ _r_a_d_i_u_s_  _m_e_a_n_ _t_e_x_t_u_r_e_  \\\n",
              "517                    19.89                      20.26   \n",
              "\n",
              "     _m_e_a_n_ _p_e_r_i_m_e_t_e_r_  _m_e_a_n_ _a_r_e_a_  \\\n",
              "517                          130.5               1214.0   \n",
              "\n",
              "     _m_e_a_n_ _s_m_o_o_t_h_n_e_s_s_  _m_e_a_n_ _c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "517                           0.1037                              0.131   \n",
              "\n",
              "     _m_e_a_n_ _c_o_n_c_a_v_i_t_y_  _m_e_a_n_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_  \\\n",
              "517                         0.1411                                  0.09431   \n",
              "\n",
              "     _m_e_a_n_ _s_y_m_m_e_t_r_y_  \\\n",
              "517                       0.1802   \n",
              "\n",
              "     _m_e_a_n_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_  ...  \\\n",
              "517                                        0.06188  ...   \n",
              "\n",
              "     _w_o_r_s_t_ _p_e_r_i_m_e_t_e_r_  _w_o_r_s_t_ _a_r_e_a_  \\\n",
              "517                            160.5                 1646.0   \n",
              "\n",
              "     _w_o_r_s_t_ _s_m_o_o_t_h_n_e_s_s_  _w_o_r_s_t_ _c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "517                             0.1417                               0.3309   \n",
              "\n",
              "     _w_o_r_s_t_ _c_o_n_c_a_v_i_t_y_  \\\n",
              "517                           0.4185   \n",
              "\n",
              "     _w_o_r_s_t_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_  _w_o_r_s_t_ _s_y_m_m_e_t_r_y_  \\\n",
              "517                                     0.1613                         0.2549   \n",
              "\n",
              "     _w_o_r_s_t_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_  _T_a_r_g_e_t_  Target  \n",
              "517                                          0.09136              0       0  \n",
              "\n",
              "[1 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c51e88db-1338-4258-a38d-79107ba4d41d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>_m_e_a_n_ _r_a_d_i_u_s_</th>\n",
              "      <th>_m_e_a_n_ _t_e_x_t_u_r_e_</th>\n",
              "      <th>_m_e_a_n_ _p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_m_e_a_n_ _a_r_e_a_</th>\n",
              "      <th>_m_e_a_n_ _s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n_ _c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n_ _c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_m_e_a_n_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_</th>\n",
              "      <th>_m_e_a_n_ _s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_m_e_a_n_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>...</th>\n",
              "      <th>_w_o_r_s_t_ _p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_w_o_r_s_t_ _a_r_e_a_</th>\n",
              "      <th>_w_o_r_s_t_ _s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_</th>\n",
              "      <th>_w_o_r_s_t_ _s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_w_o_r_s_t_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>_T_a_r_g_e_t_</th>\n",
              "      <th>Target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>517</th>\n",
              "      <td>19.89</td>\n",
              "      <td>20.26</td>\n",
              "      <td>130.5</td>\n",
              "      <td>1214.0</td>\n",
              "      <td>0.1037</td>\n",
              "      <td>0.131</td>\n",
              "      <td>0.1411</td>\n",
              "      <td>0.09431</td>\n",
              "      <td>0.1802</td>\n",
              "      <td>0.06188</td>\n",
              "      <td>...</td>\n",
              "      <td>160.5</td>\n",
              "      <td>1646.0</td>\n",
              "      <td>0.1417</td>\n",
              "      <td>0.3309</td>\n",
              "      <td>0.4185</td>\n",
              "      <td>0.1613</td>\n",
              "      <td>0.2549</td>\n",
              "      <td>0.09136</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c51e88db-1338-4258-a38d-79107ba4d41d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c51e88db-1338-4258-a38d-79107ba4d41d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c51e88db-1338-4258-a38d-79107ba4d41d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cancer.sample(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 491
        },
        "id": "qYH8EziQa3Wn",
        "outputId": "1606d446-6304-44f9-dbc3-dfbc0f2aaa9a"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     _m_e_a_n_ _r_a_d_i_u_s_  _m_e_a_n_ _t_e_x_t_u_r_e_  \\\n",
              "257                    15.32                      17.27   \n",
              "306                    13.20                      15.82   \n",
              "185                    10.08                      15.11   \n",
              "469                    11.62                      18.18   \n",
              "153                    11.15                      13.08   \n",
              "320                    10.25                      16.18   \n",
              "377                    13.46                      28.21   \n",
              "439                    14.02                      15.66   \n",
              "132                    16.16                      21.54   \n",
              "534                    10.96                      17.62   \n",
              "\n",
              "     _m_e_a_n_ _p_e_r_i_m_e_t_e_r_  _m_e_a_n_ _a_r_e_a_  \\\n",
              "257                         103.20                713.3   \n",
              "306                          84.07                537.3   \n",
              "185                          63.76                317.5   \n",
              "469                          76.38                408.8   \n",
              "153                          70.87                381.9   \n",
              "320                          66.52                324.2   \n",
              "377                          85.89                562.1   \n",
              "439                          89.59                606.5   \n",
              "132                         106.20                809.8   \n",
              "534                          70.79                365.6   \n",
              "\n",
              "     _m_e_a_n_ _s_m_o_o_t_h_n_e_s_s_  _m_e_a_n_ _c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "257                          0.13350                            0.22840   \n",
              "306                          0.08511                            0.05251   \n",
              "185                          0.09267                            0.04695   \n",
              "469                          0.11750                            0.14830   \n",
              "153                          0.09754                            0.05113   \n",
              "320                          0.10610                            0.11110   \n",
              "377                          0.07517                            0.04726   \n",
              "439                          0.07966                            0.05581   \n",
              "132                          0.10080                            0.12840   \n",
              "534                          0.09687                            0.09752   \n",
              "\n",
              "     _m_e_a_n_ _c_o_n_c_a_v_i_t_y_  _m_e_a_n_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_  \\\n",
              "257                       0.244800                                 0.124200   \n",
              "306                       0.001461                                 0.003261   \n",
              "185                       0.001597                                 0.002404   \n",
              "469                       0.102000                                 0.055640   \n",
              "153                       0.019820                                 0.017860   \n",
              "320                       0.067260                                 0.039650   \n",
              "377                       0.012710                                 0.011170   \n",
              "439                       0.020870                                 0.026520   \n",
              "132                       0.104300                                 0.056130   \n",
              "534                       0.052630                                 0.027880   \n",
              "\n",
              "     _m_e_a_n_ _s_y_m_m_e_t_r_y_  \\\n",
              "257                       0.2398   \n",
              "306                       0.1632   \n",
              "185                       0.1703   \n",
              "469                       0.1957   \n",
              "153                       0.1830   \n",
              "320                       0.1743   \n",
              "377                       0.1421   \n",
              "439                       0.1589   \n",
              "132                       0.2160   \n",
              "534                       0.1619   \n",
              "\n",
              "     _m_e_a_n_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_  ...  \\\n",
              "257                                        0.07596  ...   \n",
              "306                                        0.05894  ...   \n",
              "185                                        0.06048  ...   \n",
              "469                                        0.07255  ...   \n",
              "153                                        0.06105  ...   \n",
              "320                                        0.07279  ...   \n",
              "377                                        0.05763  ...   \n",
              "439                                        0.05586  ...   \n",
              "132                                        0.05891  ...   \n",
              "534                                        0.06408  ...   \n",
              "\n",
              "     _w_o_r_s_t_ _p_e_r_i_m_e_t_e_r_  _w_o_r_s_t_ _a_r_e_a_  \\\n",
              "257                           119.80                  928.8   \n",
              "306                            92.00                  636.9   \n",
              "185                            75.39                  437.0   \n",
              "469                            88.14                  528.1   \n",
              "153                            76.25                  440.8   \n",
              "320                            71.53                  390.4   \n",
              "377                            97.11                  680.6   \n",
              "439                            96.53                  688.9   \n",
              "132                           129.70                 1175.0   \n",
              "534                            76.43                  407.5   \n",
              "\n",
              "     _w_o_r_s_t_ _s_m_o_o_t_h_n_e_s_s_  _w_o_r_s_t_ _c_o_m_p_a_c_t_n_e_s_s_  \\\n",
              "257                             0.1765                              0.45030   \n",
              "306                             0.1128                              0.13460   \n",
              "185                             0.1521                              0.10190   \n",
              "469                             0.1780                              0.28780   \n",
              "153                             0.1341                              0.08971   \n",
              "320                             0.1402                              0.23600   \n",
              "377                             0.1108                              0.14570   \n",
              "439                             0.1034                              0.10170   \n",
              "132                             0.1395                              0.30550   \n",
              "534                             0.1428                              0.25100   \n",
              "\n",
              "     _w_o_r_s_t_ _c_o_n_c_a_v_i_t_y_  \\\n",
              "257                          0.44290   \n",
              "306                          0.01120   \n",
              "185                          0.00692   \n",
              "469                          0.31860   \n",
              "153                          0.07116   \n",
              "320                          0.18980   \n",
              "377                          0.07934   \n",
              "439                          0.06260   \n",
              "132                          0.29920   \n",
              "534                          0.21230   \n",
              "\n",
              "     _w_o_r_s_t_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_  _w_o_r_s_t_ _s_y_m_m_e_t_r_y_  \\\n",
              "257                                    0.22290                         0.3258   \n",
              "306                                    0.02500                         0.2651   \n",
              "185                                    0.01042                         0.2933   \n",
              "469                                    0.14160                         0.2660   \n",
              "153                                    0.05506                         0.2859   \n",
              "320                                    0.09744                         0.2608   \n",
              "377                                    0.05781                         0.2694   \n",
              "439                                    0.08216                         0.2136   \n",
              "132                                    0.13120                         0.3480   \n",
              "534                                    0.09861                         0.2289   \n",
              "\n",
              "     _w_o_r_s_t_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_  _T_a_r_g_e_t_  Target  \n",
              "257                                          0.11910              0       0  \n",
              "306                                          0.08385              1       1  \n",
              "185                                          0.07697              1       1  \n",
              "469                                          0.09270              1       1  \n",
              "153                                          0.06772              1       1  \n",
              "320                                          0.09702              1       1  \n",
              "377                                          0.07061              1       1  \n",
              "439                                          0.06710              1       1  \n",
              "132                                          0.07619              0       0  \n",
              "534                                          0.08278              1       1  \n",
              "\n",
              "[10 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4c85ce83-79c0-4daa-8317-8c5346ceec08\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>_m_e_a_n_ _r_a_d_i_u_s_</th>\n",
              "      <th>_m_e_a_n_ _t_e_x_t_u_r_e_</th>\n",
              "      <th>_m_e_a_n_ _p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_m_e_a_n_ _a_r_e_a_</th>\n",
              "      <th>_m_e_a_n_ _s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n_ _c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_m_e_a_n_ _c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_m_e_a_n_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_</th>\n",
              "      <th>_m_e_a_n_ _s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_m_e_a_n_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>...</th>\n",
              "      <th>_w_o_r_s_t_ _p_e_r_i_m_e_t_e_r_</th>\n",
              "      <th>_w_o_r_s_t_ _a_r_e_a_</th>\n",
              "      <th>_w_o_r_s_t_ _s_m_o_o_t_h_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_m_p_a_c_t_n_e_s_s_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_n_c_a_v_i_t_y_</th>\n",
              "      <th>_w_o_r_s_t_ _c_o_n_c_a_v_e_ _p_o_i_n_t_s_</th>\n",
              "      <th>_w_o_r_s_t_ _s_y_m_m_e_t_r_y_</th>\n",
              "      <th>_w_o_r_s_t_ _f_r_a_c_t_a_l_ _d_i_m_e_n_s_i_o_n_</th>\n",
              "      <th>_T_a_r_g_e_t_</th>\n",
              "      <th>Target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>15.32</td>\n",
              "      <td>17.27</td>\n",
              "      <td>103.20</td>\n",
              "      <td>713.3</td>\n",
              "      <td>0.13350</td>\n",
              "      <td>0.22840</td>\n",
              "      <td>0.244800</td>\n",
              "      <td>0.124200</td>\n",
              "      <td>0.2398</td>\n",
              "      <td>0.07596</td>\n",
              "      <td>...</td>\n",
              "      <td>119.80</td>\n",
              "      <td>928.8</td>\n",
              "      <td>0.1765</td>\n",
              "      <td>0.45030</td>\n",
              "      <td>0.44290</td>\n",
              "      <td>0.22290</td>\n",
              "      <td>0.3258</td>\n",
              "      <td>0.11910</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>13.20</td>\n",
              "      <td>15.82</td>\n",
              "      <td>84.07</td>\n",
              "      <td>537.3</td>\n",
              "      <td>0.08511</td>\n",
              "      <td>0.05251</td>\n",
              "      <td>0.001461</td>\n",
              "      <td>0.003261</td>\n",
              "      <td>0.1632</td>\n",
              "      <td>0.05894</td>\n",
              "      <td>...</td>\n",
              "      <td>92.00</td>\n",
              "      <td>636.9</td>\n",
              "      <td>0.1128</td>\n",
              "      <td>0.13460</td>\n",
              "      <td>0.01120</td>\n",
              "      <td>0.02500</td>\n",
              "      <td>0.2651</td>\n",
              "      <td>0.08385</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>185</th>\n",
              "      <td>10.08</td>\n",
              "      <td>15.11</td>\n",
              "      <td>63.76</td>\n",
              "      <td>317.5</td>\n",
              "      <td>0.09267</td>\n",
              "      <td>0.04695</td>\n",
              "      <td>0.001597</td>\n",
              "      <td>0.002404</td>\n",
              "      <td>0.1703</td>\n",
              "      <td>0.06048</td>\n",
              "      <td>...</td>\n",
              "      <td>75.39</td>\n",
              "      <td>437.0</td>\n",
              "      <td>0.1521</td>\n",
              "      <td>0.10190</td>\n",
              "      <td>0.00692</td>\n",
              "      <td>0.01042</td>\n",
              "      <td>0.2933</td>\n",
              "      <td>0.07697</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>469</th>\n",
              "      <td>11.62</td>\n",
              "      <td>18.18</td>\n",
              "      <td>76.38</td>\n",
              "      <td>408.8</td>\n",
              "      <td>0.11750</td>\n",
              "      <td>0.14830</td>\n",
              "      <td>0.102000</td>\n",
              "      <td>0.055640</td>\n",
              "      <td>0.1957</td>\n",
              "      <td>0.07255</td>\n",
              "      <td>...</td>\n",
              "      <td>88.14</td>\n",
              "      <td>528.1</td>\n",
              "      <td>0.1780</td>\n",
              "      <td>0.28780</td>\n",
              "      <td>0.31860</td>\n",
              "      <td>0.14160</td>\n",
              "      <td>0.2660</td>\n",
              "      <td>0.09270</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>11.15</td>\n",
              "      <td>13.08</td>\n",
              "      <td>70.87</td>\n",
              "      <td>381.9</td>\n",
              "      <td>0.09754</td>\n",
              "      <td>0.05113</td>\n",
              "      <td>0.019820</td>\n",
              "      <td>0.017860</td>\n",
              "      <td>0.1830</td>\n",
              "      <td>0.06105</td>\n",
              "      <td>...</td>\n",
              "      <td>76.25</td>\n",
              "      <td>440.8</td>\n",
              "      <td>0.1341</td>\n",
              "      <td>0.08971</td>\n",
              "      <td>0.07116</td>\n",
              "      <td>0.05506</td>\n",
              "      <td>0.2859</td>\n",
              "      <td>0.06772</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>320</th>\n",
              "      <td>10.25</td>\n",
              "      <td>16.18</td>\n",
              "      <td>66.52</td>\n",
              "      <td>324.2</td>\n",
              "      <td>0.10610</td>\n",
              "      <td>0.11110</td>\n",
              "      <td>0.067260</td>\n",
              "      <td>0.039650</td>\n",
              "      <td>0.1743</td>\n",
              "      <td>0.07279</td>\n",
              "      <td>...</td>\n",
              "      <td>71.53</td>\n",
              "      <td>390.4</td>\n",
              "      <td>0.1402</td>\n",
              "      <td>0.23600</td>\n",
              "      <td>0.18980</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>0.2608</td>\n",
              "      <td>0.09702</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>13.46</td>\n",
              "      <td>28.21</td>\n",
              "      <td>85.89</td>\n",
              "      <td>562.1</td>\n",
              "      <td>0.07517</td>\n",
              "      <td>0.04726</td>\n",
              "      <td>0.012710</td>\n",
              "      <td>0.011170</td>\n",
              "      <td>0.1421</td>\n",
              "      <td>0.05763</td>\n",
              "      <td>...</td>\n",
              "      <td>97.11</td>\n",
              "      <td>680.6</td>\n",
              "      <td>0.1108</td>\n",
              "      <td>0.14570</td>\n",
              "      <td>0.07934</td>\n",
              "      <td>0.05781</td>\n",
              "      <td>0.2694</td>\n",
              "      <td>0.07061</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>14.02</td>\n",
              "      <td>15.66</td>\n",
              "      <td>89.59</td>\n",
              "      <td>606.5</td>\n",
              "      <td>0.07966</td>\n",
              "      <td>0.05581</td>\n",
              "      <td>0.020870</td>\n",
              "      <td>0.026520</td>\n",
              "      <td>0.1589</td>\n",
              "      <td>0.05586</td>\n",
              "      <td>...</td>\n",
              "      <td>96.53</td>\n",
              "      <td>688.9</td>\n",
              "      <td>0.1034</td>\n",
              "      <td>0.10170</td>\n",
              "      <td>0.06260</td>\n",
              "      <td>0.08216</td>\n",
              "      <td>0.2136</td>\n",
              "      <td>0.06710</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>16.16</td>\n",
              "      <td>21.54</td>\n",
              "      <td>106.20</td>\n",
              "      <td>809.8</td>\n",
              "      <td>0.10080</td>\n",
              "      <td>0.12840</td>\n",
              "      <td>0.104300</td>\n",
              "      <td>0.056130</td>\n",
              "      <td>0.2160</td>\n",
              "      <td>0.05891</td>\n",
              "      <td>...</td>\n",
              "      <td>129.70</td>\n",
              "      <td>1175.0</td>\n",
              "      <td>0.1395</td>\n",
              "      <td>0.30550</td>\n",
              "      <td>0.29920</td>\n",
              "      <td>0.13120</td>\n",
              "      <td>0.3480</td>\n",
              "      <td>0.07619</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>534</th>\n",
              "      <td>10.96</td>\n",
              "      <td>17.62</td>\n",
              "      <td>70.79</td>\n",
              "      <td>365.6</td>\n",
              "      <td>0.09687</td>\n",
              "      <td>0.09752</td>\n",
              "      <td>0.052630</td>\n",
              "      <td>0.027880</td>\n",
              "      <td>0.1619</td>\n",
              "      <td>0.06408</td>\n",
              "      <td>...</td>\n",
              "      <td>76.43</td>\n",
              "      <td>407.5</td>\n",
              "      <td>0.1428</td>\n",
              "      <td>0.25100</td>\n",
              "      <td>0.21230</td>\n",
              "      <td>0.09861</td>\n",
              "      <td>0.2289</td>\n",
              "      <td>0.08278</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c85ce83-79c0-4daa-8317-8c5346ceec08')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4c85ce83-79c0-4daa-8317-8c5346ceec08 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4c85ce83-79c0-4daa-8317-8c5346ceec08');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = cancer.iloc[:,:10]"
      ],
      "metadata": {
        "id": "OUAOKHdybGf8"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y= cancer.Target"
      ],
      "metadata": {
        "id": "h47xPLA_dPUi"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=123)  #splitting datasets"
      ],
      "metadata": {
        "id": "cuwP1rYodYA6"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.formula.api as smf\n"
      ],
      "metadata": {
        "id": "QqHc02C9d4yz"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all_columns ='+'.join(cancer.columns[:10])"
      ],
      "metadata": {
        "id": "Cs7ZdSppeW-d"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "formula = \"Target ~\" + all_columns"
      ],
      "metadata": {
        "id": "7lR1zvCNei81"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Formula:\", formula,\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "823aPOjXe0E8",
        "outputId": "8251b609-eea7-4d30-f941-5cdcc914077d"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Formula: Target ~mean radius+mean texture+mean perimeter+mean area+mean smoothness+mean compactness+mean concavity+mean concave points+mean symmetry+mean fractal dimension \n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "trainingdata =pd.concat([x_train,y_train], axis =1 )"
      ],
      "metadata": {
        "id": "60_X9ZK6fBOL"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        " log_reg = smf.logit(formula, data=trainingdata).fit()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 843
        },
        "id": "HTbisQC9fhfb",
        "outputId": "8ed49071-cd22-4a3b-d193-37d151b646dc"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "Traceback \u001b[0;36m(most recent call last)\u001b[0m:\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/IPython/core/interactiveshell.py\"\u001b[0m, line \u001b[1;32m3326\u001b[0m, in \u001b[1;35mrun_code\u001b[0m\n    exec(code_obj, self.user_global_ns, self.user_ns)\n",
            "  File \u001b[1;32m\"<ipython-input-51-c76707550375>\"\u001b[0m, line \u001b[1;32m1\u001b[0m, in \u001b[1;35m<module>\u001b[0m\n    log_reg = smf.logit(formula, data=trainingdata).fit()\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/statsmodels/base/model.py\"\u001b[0m, line \u001b[1;32m200\u001b[0m, in \u001b[1;35mfrom_formula\u001b[0m\n    tmp = handle_formula_data(data, None, formula, depth=eval_env,\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/statsmodels/formula/formulatools.py\"\u001b[0m, line \u001b[1;32m63\u001b[0m, in \u001b[1;35mhandle_formula_data\u001b[0m\n    result = dmatrices(formula, Y, depth, return_type='dataframe',\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/highlevel.py\"\u001b[0m, line \u001b[1;32m309\u001b[0m, in \u001b[1;35mdmatrices\u001b[0m\n    (lhs, rhs) = _do_highlevel_design(formula_like, data, eval_env,\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/highlevel.py\"\u001b[0m, line \u001b[1;32m164\u001b[0m, in \u001b[1;35m_do_highlevel_design\u001b[0m\n    design_infos = _try_incr_builders(formula_like, data_iter_maker, eval_env,\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/highlevel.py\"\u001b[0m, line \u001b[1;32m66\u001b[0m, in \u001b[1;35m_try_incr_builders\u001b[0m\n    return design_matrix_builders([formula_like.lhs_termlist,\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/build.py\"\u001b[0m, line \u001b[1;32m689\u001b[0m, in \u001b[1;35mdesign_matrix_builders\u001b[0m\n    factor_states = _factors_memorize(all_factors, data_iter_maker, eval_env)\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/build.py\"\u001b[0m, line \u001b[1;32m354\u001b[0m, in \u001b[1;35m_factors_memorize\u001b[0m\n    which_pass = factor.memorize_passes_needed(state, eval_env)\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/eval.py\"\u001b[0m, line \u001b[1;32m478\u001b[0m, in \u001b[1;35mmemorize_passes_needed\u001b[0m\n    subset_names = [name for name in ast_names(self.code)\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/eval.py\"\u001b[0m, line \u001b[1;32m478\u001b[0m, in \u001b[1;35m<listcomp>\u001b[0m\n    subset_names = [name for name in ast_names(self.code)\n",
            "  File \u001b[1;32m\"/usr/local/lib/python3.9/dist-packages/patsy/eval.py\"\u001b[0m, line \u001b[1;32m109\u001b[0m, in \u001b[1;35mast_names\u001b[0m\n    for node in ast.walk(ast.parse(code)):\n",
            "\u001b[0;36m  File \u001b[0;32m\"/usr/lib/python3.9/ast.py\"\u001b[0;36m, line \u001b[0;32m50\u001b[0;36m, in \u001b[0;35mparse\u001b[0;36m\u001b[0m\n\u001b[0;31m    return compile(source, filename, mode, flags,\u001b[0m\n",
            "\u001b[0;36m  File \u001b[0;32m\"<unknown>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    mean fractal dimension\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "log_reg.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "id": "h54iLpZHfs5J",
        "outputId": "d7dc644b-76ff-4d94-877d-a9b096f0341c"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-49-32bfe01203dc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlog_reg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'log_reg' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "WoO5bM01k3uR"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}